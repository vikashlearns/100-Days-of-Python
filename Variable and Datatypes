Variables - (data Stored in Memory Locations)
Why do we store data in Memory location ?
- Because we want to manipulate it throughtout the program

String - to store a name or piece of text
Integer - Age 
Float - CGPA

Variable is created the moment you assign a value using Assignment Operator
(=)

Dynamically Typed language - 
age=34 (integer)
name="Harry" (String)
cgpa=4.8 ( Floating)


Statically type language - need a explictly declaration of variable  ( C)

#Rule of defining a variable in Python
Variable names must start with a letter (a-z,A-z) or an underscore (_)
They can contain letters , numbers and underscore
Variable names are case-sensitive (age and Age are different)
Avoid using Python Keywords as variable (if , for , while) as variable names

Python supports serveral built in data types:
Integers (int) - whole number 
Floats (float) - Decimal numbers
String (str) - Text data enclosed in quotes ""
Booleans (bool)- Represent true or false
Lists -  Ordered, mutable collections ([1,2,3])
Tuples - Ordered immutable collections ( (1,2,3) ) (immutable - you cannot change)
Sets - Unordered collections of unique elements ( {1,2,3} )
Dictionaries: Key-value pairs ( {"name": "Alice", "age"; 25})


Type Casting - Changing 1 datatype to other

b=int(a) 

int(): Converts to integer.
float(): Converts to float.
str(): Converts to string.
bol(): Converts to bolean.

How can we take user input in python ?
using input() - allow to take user input from keyboard
-by default returns an str
a=int( input("Enter first number"))
b=int(input("Enter second number"))
# int(a=int(a)
# b=int(b)
print(a+b)


comments, Escape Sequence & print 

Comments - used to explain code and ignored by python interpretor

ctrl+ / - to remove/add comments (#)

''' or """ = to write multi level comments 

Escape Sequence - 
are used to include special characters in string 

\n: Newline
t: Tab
\: Backslash
\": Double quote
\': Single quote

Print statement - to display output output
Variables - (data Stored in Memory Locations)
Why do we store data in Memory location ?
- Because we want to manipulate it throughtout the program

String - to store a name or piece of text
Integer - Age 
Float - CGPA

Variable is created the moment you assign a value using Assignment Operator
(=)

Dynamically Typed language - 
age=34 (integer)
name="Harry" (String)
cgpa=4.8 ( Floating)


Statically type language - need a explictly declaration of variable  ( C)

#Rule of defining a variable in Python
Variable names must start with a letter (a-z,A-z) or an underscore (_)
They can contain letters , numbers and underscore
Variable names are case-sensitive (age and Age are different)
Avoid using Python Keywords as variable (if , for , while) as variable names

Python supports serveral built in data types:
Integers (int) - whole number 
Floats (float) - Decimal numbers
String (str) - Text data enclosed in quotes ""
Booleans (bool)- Represent true or false
Lists -  Ordered, mutable collections ([1,2,3])
Tuples - Ordered immutable collections ( (1,2,3) ) (immutable - you cannot change)
Sets - Unordered collections of unique elements ( {1,2,3} )
Dictionaries: Key-value pairs ( {"name": "Alice", "age"; 25})


Type Casting - Changing 1 datatype to other

b=int(a) 

int(): Converts to integer.
float(): Converts to float.
str(): Converts to string.
bol(): Converts to bolean.

How can we take user input in python ?
using input() - allow to take user input from keyboard
-by default returns an str
a=int( input("Enter first number"))
b=int(input("Enter second number"))
# int(a=int(a)
# b=int(b)
print(a+b)


comments, Escape Sequence & print 

Comments - used to explain code and ignored by python interpretor

ctrl+ / - to remove/add comments (#)

''' or """ = to write multi level comments 

Escape Sequence - 
are used to include special characters in string 

\n: Newline
t: Tab
\: Backslash
\": Double quote
\': Single quote

Print statement - to display output output
can use sep and end parameters to customize the output

Operators

Arithmetic Operators
+ - Addition
- - Subtraction
* - Multiplication
/ - Division
** - Exponentiation
// - Floor Division
% - Modulus

ALT and click - to simultaneously change values in 2 places
CTRL+/ - To comment the line

Comparison Operators
== Equal
!= Not Equal
> Greater than
< Less than
>= Greater than or Equal
<= Less than or Equal


Logical Operators

1. and ,or, not

and = always return a true when both values are true 
otherwise it will return false

or - one out of 2 values should be true otherwise it will
output false

not - when negate a true or false
not(true) - False
not(False) - True
used to create conditional programs in Python

Assignment Operators
=
+=
-=
*=
/=
%=
**=
//=

Membership Operators

in, not,in 

Identity Operators:
is , is not 


***** IMPORTANT POINTS ****** 
variable store data and python supports multiple data types
Typecasting allows you to convert between datatypes 
input() - to take user input
print() - to display output
Comments and escape sequences -> help to make code readable
Python provides variety of operators for performing operations
on data.

